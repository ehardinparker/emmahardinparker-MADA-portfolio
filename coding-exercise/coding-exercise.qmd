---
title: "R Coding Exercise"
---

Loading dslabs package
```{r}
#loading dslabs 
library(dslabs)


#viewing help file for gapminder data
help("gapminder")
```

Overview of Data Structure 
```{r}
str(gapminder)
```
Summary of the Data & Viewing the Data
```{r}
summary(gapminder)

```
Determining the class of gapminder
```{r}
class(gapminder)
```

Adding tidyverse to the library
```{r}
library(tidyverse)
```
Assigning African countries to new vector & viewing new vector 
```{r}
africadata <- gapminder %>%
  filter(continent == "Africa")
```

Viewing structure and summary of africadata
```{r}
str(africadata)
summary(africadata)
```
New object containing only infant_mortality and life_expectancy
```{r}
infant_expect <- subset(africadata, select = c(infant_mortality, life_expectancy))

## looking a structure of infant_expect
str(infant_expect)

## summary of infant_expect 
summary(infant_expect)
```

New object containing only population and life_expectancy
```{r}
pop_expect <- subset(africadata, select = c(life_expectancy, population))

##structure of pop_expect
str(pop_expect)

##summary of pop_expect
summary(pop_expect)
```
Library ggplot2 for future plots 
```{r}
library(ggplot2)
```


Plotting life expectancy as a function of infant mortality 
```{r}
expect_infant_plot <- ggplot(infant_expect, aes(x = infant_mortality, y = life_expectancy)) +
  geom_point()

expect_infant_plot
```


Plotting life expectancy as a function of population 
```{r}
expect_pop_plot <- ggplot(pop_expect, aes(x = population, y = life_expectancy)) +
  geom_point() + 
  scale_y_continuous()

expect_pop_plot
```

To explore why there are "streaks" of data in the plot above, I manually sorted africadata by country to see how population and life_expectancy change over time. By looking at the data this way, I could see that over time as population size increased, life expectancy increased as well. For example, from 1960 to 2015, Algeria's population increased from 11,124,892to 39,666,519 and life expectancy increased from 47.50 years to 76.40 years. 


Finding which years have NA values
```{r}
colSums(is.na(africadata)) ##finding out how many NA values exist for each column 

where_na_infant <- africadata %>% ## creating object that clearly shows which years have missing values for infant mortality
  filter(is.na(infant_mortality))

```


Filtering africadata to only include the year 2000
```{r}
africa_twothousand <- africadata %>%
  filter(year == "2000")


str(africa_twothousand) ## double checking structure
summary(africa_twothousand) ## triple checking structure 
```

Plotting life expectancy as a function of infant mortality for the year 2000 
```{r}
expect_infant_plot2000 <- ggplot(africa_twothousand, aes(x = infant_mortality, y = life_expectancy)) +
  geom_point()

expect_infant_plot2000
```

Plotting life expectancy as a function of population for the year 2000
```{r}
expect_pop_plot2000 <- ggplot(africa_twothousand, aes(x = population, y = life_expectancy)) +
  geom_point() + 
  scale_y_continuous()

expect_pop_plot2000
```

Beginning simple model fits 
```{r}
fit1 <- lm(life_expectancy ~ infant_mortality, africa_twothousand)

fit2 <- lm(life_expectancy ~ population, africa_twothousand)
```

Summary of both fit models 
```{r}
summary(fit1)
summary(fit2)
```
For the model fitting life expectancy as the outcome and infant mortality as the predictor, the p-value is statistically significant at 2.826 x 10^-8. This p-value alone could suggest an association between life expectancy and infant mortality. 

For the model fitting life expectancy as the outcome and population as the predictor, the p-value is 0.6159, well above the typical alpha = 0.05 threshold. This indicates that there is no evidence to suggest an association or correlation between life expectancy and population. 

THIS SECTION CONTRIBUTED BY KEVIN KOSEWICK

For this part of the exercise, I will be using the "divorce_margarine" data set that contains divorce rate/1000 people in Maine, per capita margarine consumption (lbs) in the U.S., and the year. We'll load dslabs and view the dataset.

```{r}
#loading dslabs 
library(dslabs)


#viewing help file for divorce_margarine data
help("divorce_margarine")
```
We'll load the overview and summary of the data.

```{r}
#structure of data
str(divorce_margarine)

#summary of data
summary(divorce_margarine)
```
We'll now inspect the class of the data set and load the tidyverse package to begin data processing.

```{r}
#check the class
class(divorce_margarine)

#load tidyverse
library(tidyverse)
```
We will create an object with only divorce rate and margarine consumption.

```{r}
#first, make an object with divorce_margarine data set
fulldivorce<- divorce_margarine

#next, make the object with only divorce_rate_maine and margarine_consumption_per_capita
margdivorce <- subset(divorce_margarine, select = c(divorce_rate_maine, margarine_consumption_per_capita))

#structure and summary checks
str(margdivorce)
summary(margdivorce)
```
Plot divorce rate as a function of margarine consumption.

```{r}
#load ggplot for plot design
library(ggplot2)
#plot divorce as a function of margarine
divorce_margarine_plot <- ggplot(margdivorce, aes(x = divorce_rate_maine, y = margarine_consumption_per_capita)) +
  geom_point()
#load the plot
plot(divorce_margarine_plot)
```
The plot indicates a strong positive correlation between margarine consumption and divorce rates. The true enemy of all Maine marriages seems to be butter substitutes. Now we'll plot divorce rates as a function of the year.

```{r}
#create an object with just year and divorce rates
yeardivorce <- subset(divorce_margarine, select = c(divorce_rate_maine, year))
#plot divorce as a function of the year
divorce_year_plot <- ggplot(yeardivorce, aes(x = divorce_rate_maine, y = year)) +
  geom_point()
#load the plot
plot(divorce_year_plot)
```
Our plot indicates that divorce rates have decreased over time in Maine. We'll now make a plot to see how margarine consumption has changed over the years. 

```{r}
#make an object with just margarine consumption and years
yearmarg <- subset(divorce_margarine, select = c(margarine_consumption_per_capita, year))
#plot margarine consumption as a function of the year
margarine_year_plot <- ggplot(yearmarg, aes(x = margarine_consumption_per_capita, y = year)) +
  geom_point()
#plot it
plot(margarine_year_plot)
```

Our plot indicates that margarine consumption has decreased over the years. The year is negatively correlated with both margarine consumption and divorce rates; however, divorce seems to be more frequent in years with higher margarine consumption. To make sure that America's consumption of margarine is truly the reason for failed marriages in Maine, we'll create some linear models. First, we'll fit just margarine consumption as a predictor for divorce rates. Then, we'll fit both year and margarine as predictors for divorce rates.

```{r}
#fit margarine as a predictor for divorce
fit_margarine_only <- lm(divorce_rate_maine ~ margarine_consumption_per_capita, divorce_margarine)

#fit marg and year as predicotrs for divorce
fit_margarine_year <- lm(divorce_rate_maine ~ margarine_consumption_per_capita + year, divorce_margarine)

#call both plots
summary(fit_margarine_only)
summary(fit_margarine_year)
```
Our models indicate that year is not a statistically significant predictor of divorce rates, but margarine consumption is. Both models apparently describe most of the variation as well given our R-squared values. These results would seem to indicate that we can attribute more frequent divorces in Maine to the amount of margarine Americans consume a year. However, if given a bit of thought, this correlation makes no sense and should not be equated to causation. Regardless, it's a fun analysis to run.
