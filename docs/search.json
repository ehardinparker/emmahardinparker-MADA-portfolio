[
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "Zane contributed to this exercise on Saturday 1/20\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 Description of data and data source",
    "text": "2.1 Description of data and data source\nThe original data file was stored under exampledata.xls and contained three variables: height, weight, and gender. Two new variables, age and smoking_status were added into the table and codebook into the file exampledata2.xls."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Questions/Hypotheses to be addressed",
    "text": "2.2 Questions/Hypotheses to be addressed\nI wanted to determine whether there were relationships between age and height, as well as height and smoking status. To do this, I constructed a scatterplot, boxplot, and linear regression model."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data import and cleaning",
    "text": "3.1 Data import and cleaning\n\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n\n#load data. \nmydata &lt;- readRDS(data_location)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Statistical analysis",
    "text": "3.2 Statistical analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1.0000000\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nSmoking_Status\n2\n0.7777778\nFALSE\n2\nYes: 5, No: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1.0000000\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1.0000000\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nAge\n0\n1.0000000\nNA\nNA\nNA\n39.00000\n15.30523\n22\n28\n32\n51\n64\n▇▂▂▂▃"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\nBoxplot of Smoking Status & Height\n\np5 &lt;- mydata |&gt;\n  ggplot2::ggplot() +\n  ggplot2::aes(x = Smoking_Status, y = Height) +\n  ggplot2::geom_boxplot()\n\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here::here(\n  \"starter-analysis-exercise\",\n  \"results\",\n  \"figures\",\n  \"height-smoking-stratified.png\"\n)\nggplot2::ggsave(filename = figure_file, plot = p5) \n\nSaving 7 x 5 in image\n\n\nThe boxplot indicates that individuals who report smoking are, on average, slightly taller than those who did not report smoking.\nScatterplot of Height and Age\n\np6 &lt;- mydata |&gt;\n  ggplot2::ggplot() +\n  ggplot2::aes(x = Age, y = Height) +\n  ggplot2::geom_point()\n\nplot(p6)\n\n\n\n\n\n\n\nfigure_file = here::here(\n  \"starter-analysis-exercise\",\n  \"results\",\n  \"figures\",\n  \"height-age-stratified.png\"\n)\nggplot2::ggsave(filename = figure_file, plot = p6) \n\nSaving 7 x 5 in image\n\n\nThere is no apparent association between age and height."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871\n\n\n\n\n\n\n\n\nModel of Height ~ Smoking_Status + Age\n\n#### Third model fit\n# fit linear model using height as outcome, smoking status and age as predictor\nlmfit3 &lt;- lm(Height ~ Smoking_Status + Age, mydata)\n\n#place results from fit into a data frame with the tidy function\nlmtable3 &lt;- broom::tidy(lmfit3)\n\n#look at fit results\nprint(lmtable3)\n\n# A tibble: 3 × 5\n  term              estimate std.error statistic  p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)        185.       15.8      11.7   0.000305\n2 Smoking_StatusYes    5.11      9.05      0.565 0.602   \n3 Age                 -0.455     0.310    -1.46  0.217   \n\n#save fit results table \n\ntable_file3 = here(\"starter-analysis-exercise\", \"results\", \"tables-files\", \"resulttable3.rds\")\n\nThe linear regression model with height as the outcome and smoking_status and age as predictors yieled no statistically significant results suggesting there is not enough evidence that smoking_status and age are indicative of height. This contrasts the preliminary analysis of the boxplot that suggested there may be a positive association between height and smoking_status."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nOverall, there is no statistically significant evidence to suggest that smoking_status and age have any association with height, weight, or gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nOne limitation of this analysis involves the two added variables: smoking_status and age. These variables were arbitrarily added for the sake of performing introductory exploratory data analysis, and not to answer any pressing research questions."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nThere is no evidence to suggest there are any significant associations between height, gender, weight, smoking status, or age.\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/emmahardinparker/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\n  \"starter-analysis-exercise\",\n  \"data\",\n  \"raw-data\",\n  \"exampledata2.xlsx\"\n)\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`       \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                  \n1 Height          height in centimeters                 numeric value &gt;0 or NA \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA \n3 Gender          identified gender (male/female/other) M/F/O/NA               \n4 Smoking Status  self reported smoking status          Yes/No/NA              \n5 Age             identified age                        numeric value &gt;18 or NA\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height           &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166…\n$ Weight           &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55…\n$ Gender           &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F…\n$ `Smoking Status` &lt;chr&gt; \"Yes\", \"No\", \"NA\", \"NA\", \"No\", \"Yes\", \"Yes\", \"Yes\", \"…\n$ Age              &lt;dbl&gt; 28, 32, 47, 24, 35, 51, 64, 43, 39, 49, 54, 22, 30, 57\n\nsummary(rawdata)\n\n    Height              Weight          Gender          Smoking Status    \n Length:14          Min.   :  45.0   Length:14          Length:14         \n Class :character   1st Qu.:  55.0   Class :character   Class :character  \n Mode  :character   Median :  70.0   Mode  :character   Mode  :character  \n                    Mean   : 602.7                                        \n                    3rd Qu.:  90.0                                        \n                    Max.   :7000.0                                        \n                    NA's   :1                                             \n      Age       \n Min.   :22.00  \n 1st Qu.:30.50  \n Median :41.00  \n Mean   :41.07  \n 3rd Qu.:50.50  \n Max.   :64.00  \n                \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender `Smoking Status`   Age\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;            &lt;dbl&gt;\n1 180        80 M      Yes                 28\n2 175        70 O      No                  32\n3 sixty      60 F      NA                  47\n4 178        76 F      NA                  24\n5 192        90 NA     No                  35\n6 6          55 F      Yes                 51\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoking Status\n0\n1\n2\n3\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55.0\n70\n90.0\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n41.07\n13.06\n22\n30.5\n41\n50.5\n64\n▇▃▆▆▃\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoking Status\n0\n1\n2\n3\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n40.62\n13.48\n22\n30.00\n39\n51\n64\n▇▃▃▆▃\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoking Status\n0\n1\n2\n3\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nAge\n0\n1.00\n40.62\n13.48\n22\n30.00\n39\n51\n64\n▇▃▃▆▃\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSmoking Status\n0\n1\n2\n3\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n38.64\n13.74\n22\n29.0\n35\n47\n64\n▇▃▃▂▃\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSmoking Status\n0\n1\n2\n3\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nAge\n0\n1\n38.64\n13.74\n22\n29.0\n35\n47\n64\n▇▃▃▂▃\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSmoking Status\n0\n1\n2\n3\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nAge\n0\n1\n39.00\n15.31\n22\n28\n32\n51\n64\n▇▂▂▂▃\n\n\n\n\n\nNext we need to check the two new variables, we’ll start with Smoking Status. It has some NA values that are character strings instead of actual NAs, so we’ll need to code those as true missing values. Then we’ll make it a factor variable as well. We’ll also replace the space in the variable name with an underscore to make it syntactically valid.\n\nd5 &lt;- d4 |&gt;\n  dplyr::rename(Smoking_Status = `Smoking Status`) |&gt;\n  dplyr::mutate(\n    # We know what the allowed values are from the codebook. So any values\n    # that are not in the level set will become NA.\n    Smoking_Status = factor(Smoking_Status, levels = c(\"No\", \"Yes\"))\n  )\n\nFinally we need to check the Age value. It looks correct, so we are done.\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d5\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\n  \"starter-analysis-exercise\",\n  \"data\",\n  \"processed-data\",\n  \"processeddata2.rds\"\n)\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/emmahardinparker/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "I chose a FiveThirtyEight article that visualized the approval and disapproval ratings of Donald Trump, over time. I used ChatGPT to help me formulate some of the code. Given that I am fairly comfortable with the ggplot2 package in R, I decided to use the plotly package for this assignment. I was unsuccessful in providing ChatGPT the actual dataset, so I was unable to reproduce the graph in its entirety; however, I seemed to get pretty close. I have also attached the snapshot of the original graph to this document.\nHere is the figure I am going to recreate \nLoading required packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(dplyr)\n\nLoading the data set from FiveThirtyEight\n\ntrump_approval &lt;- read.csv(\"~/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio/presentation-exercise/approval_polllist.csv\")\nView(trump_approval)\n\nNow that I have loaded the data along with all required libraries, I am going to attempt to recreate the plot.\n\n#Transforming the End Date variable to a Date format\n\ntrump_approval$enddate &lt;- as.Date(trump_approval$enddate, format = \"%m/%d/%Y\")\n\n# Create a new column for the year to ensure correct ordering of the x axis \ntrump_approval$year &lt;- as.factor(format(trump_approval$enddate, \"%Y\"))\n\n\n#Recreating the plot\n\ntrump1 &lt;- plot_ly(trump_approval, x = ~enddate) %&gt;%\n  add_lines(y = ~adjusted_approve, name = \"Approve\", color = I(\"#006400\"), hoverinfo = \"y+name+text\",\n            text = ~paste(\"Date: \", enddate, \"&lt;br&gt;\", \"Approve: \", adjusted_approve, \"%\")) %&gt;%\n  add_lines(y = ~adjusted_disapprove, name = \"Disapprove\",color = I(\"orange\"), hoverinfo = \"y+name+text\",\n            text = ~paste(\"Date: \", enddate, \"&lt;br&gt;\", \"Disapprove: \", adjusted_disapprove, \"%\")) %&gt;%\n  layout(title = \"How unpopular is Donald Trump?\",\n         xaxis = list(title = \"Date\", categoryorder = \"trace\"),\n         yaxis = list(title = \"Percentage\"),\n         hovermode = \"closest\")\ntrump1\n\n\n\n\n\nThough I was unable to reproduce the graph fully, I was pleased with the results. This was my first time using plotly() or creating any interactive graphs in R, so I am okay with the turnout.\nI am now going to create a publication table using the gt() package\n\n#Loading required packages\nlibrary(flextable)\n\n\nAttaching package: 'flextable'\n\n\nThe following objects are masked from 'package:plotly':\n\n    highlight, style\n\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\n#Subsetting the data to only include the variables needed for the table\nsubset_trump &lt;- trump_approval %&gt;%\n  select(c(\"pollster\", \"grade\", \"weight\", \"approve\", \"disapprove\", \"adjusted_approve\", \"adjusted_disapprove\")) \nhead(subset_trump) ##checking to make sure the data was subset correctly \n\n         pollster grade    weight approve disapprove adjusted_approve\n1 Morning Consult   B/C 0.6800286    46.0       37.0         45.68678\n2          Gallup     B 0.2623230    45.0       45.0         45.86144\n3           Ipsos    B- 0.1534812    42.1       45.2         43.45156\n4          Gallup     B 0.2428446    45.0       46.0         45.86144\n5          Gallup     B 0.2273795    46.0       45.0         46.86144\n6           Ipsos    B- 0.1415310    42.3       45.8         43.65156\n  adjusted_disapprove\n1            38.05580\n2            43.53919\n3            43.78039\n4            44.53919\n5            43.53919\n6            44.38039\n\naggregate_data &lt;- subset_trump %&gt;%\n  group_by(pollster) %&gt;%\n  summarise(\n    grade = first(grade),\n    weight = first(weight),\n    approve = first(approve),\n    disapprove = first(disapprove),\n    adjusted_approve = first(adjusted_approve),\n    adjusted_disapprove = first(adjusted_disapprove)\n  )\n\n#Creating the table using the flextable package\n\ntrump_table2 &lt;- flextable(aggregate_data)\ntrump_table2 &lt;- add_header_row(trump_table2, values = c(\"Pollster\", \"Grade\", \"Weight\", \"Approval\", \"Disapprove\", \"Adjusted Approval\", \"Adjusted Disapprove\"))\ntrump_table2\n\nPollsterGradeWeightApprovalDisapproveAdjusted ApprovalAdjusted Disapprovepollstergradeweightapprovedisapproveadjusted_approveadjusted_disapproveABC News/The Washington PostA+2.130190942.0053.0042.7180651.68988AP-NORC1.495715942.0058.0044.0883353.35389Abacus Data0.955144738.0054.0039.0567954.25439America First Policies1.071708044.0053.0042.8042253.60002American Research GroupB1.382356143.0051.0045.5849347.95538AtlasIntelB/C1.155160544.7053.9043.1441954.22026Basswood ResearchB/C1.302141448.6049.5046.8493450.44723Benenson Strategy Group/GS Strategy Group1.986241346.0054.0044.3690854.33976CBS NewsA1.759195740.0048.0041.3716147.41984CNBC/Hart Research/Public Opinion StrategiesA-1.302708039.0048.0038.2378148.82106CNN/Opinion Research Corp.B+1.543598744.0053.0043.7277751.49502CNN/SSRSB/C1.304815738.0056.0039.0435355.21600Cards Against Humanity/Survey Sampling International0.726833736.0048.0038.0086851.84125Change ResearchC-0.845289245.0055.0043.9922653.37935CiviqsB/C1.238803044.0052.0043.7585851.63856Civis Analytics1.074172944.0053.0043.4020652.54928Climate Nexus1.019265245.0054.0044.2344554.14238CygnalA/B1.460774839.1052.7039.7381252.87752D-CYFOR1.182567143.0051.0042.8337451.67189Data for ProgressB-1.190122045.0052.0044.0964351.85859Democracy Fund + UCLA Nationscape1.208635946.0050.0045.9926050.36666Echelon Insights0.838634242.0055.0042.5703253.40890Emerson CollegeA-1.128950248.1047.2046.7688150.05005Firehouse Strategies/ØptimusB/C0.648622344.0056.0044.7469452.68620Fox NewsA-1.723419448.0047.0046.0129247.48539GBAOB/C1.518281441.0059.0041.1130057.16381GQR ResearchB1.357485741.0053.0040.1878152.73983GallupB0.262323045.0045.0045.8614443.53919Garin-Hart-Yang/Global Strategy Group1.116459145.0046.0044.4042947.08164George Washington University/BattlegroundA/B1.574019742.0055.0041.3290454.92534Georgetown University/BattlegroundA/B1.574019743.0052.0042.3290451.92534Global Marketing Research Services0.953047642.8053.4042.6460453.66683Global Strategy GroupB/C0.622824545.0053.0045.0548551.95246Global Strategy Group/GBAO (Navigator Research)0.841380538.0059.0038.7287756.67871Gravis MarketingC1.178038342.0049.0040.0955050.46511Harris PollC1.235122848.0052.0043.7466151.48179HarrisXC0.493743148.0052.0043.7466151.48179Hart Research AssociatesB/C1.322803644.0056.0043.3259754.29169Heart+Mind Strategies0.855802747.0050.0045.6670850.76123Hofstra University0.955144748.7051.3047.1603550.96099IBD/TIPPA/B1.600949242.0048.0043.5397147.59201Innovative Research Group1.069223346.0052.0045.1375952.44010IpsosB-0.153481242.1045.2043.4515643.78039John Zogby Strategies/EMI Research Solutions0.834830350.2047.2048.0274448.85307Kaiser Family Foundation1.779972041.0052.0041.7691950.41321Long Island University0.847964529.0060.0033.5617457.84840Lord Ashcroft Polls1.276105343.0052.0043.5591651.12636LucidD+0.590964134.5050.6536.3539153.36682MSR GroupB/C1.136611042.7054.0042.2868454.12738Marist CollegeA+2.076003839.0050.0040.0500150.79484Marquette Law SchoolA/B2.695165140.0060.0040.7466057.91302McLaughlin & AssociatesC/D0.686965048.0048.0044.1923949.50374Monmouth UniversityA+1.793342143.0046.0043.2627747.32632Morning ConsultB/C0.680028646.0037.0045.6867838.05580NBC News/The Wall Street JournalA-1.646268044.0048.0043.2378148.82106Opinion SavvyB-1.027500543.0055.0041.6064155.31574Opinium1.026446343.0045.6244.5184248.22708PSB ResearchB/C0.859016642.0058.0042.1084856.37403Pew Research CenterB/C1.184310139.0056.0041.1628152.47771Public Opinion StrategiesB+1.233172345.0052.0044.0682451.68868Public Policy PollingB1.116293644.0044.0043.6084944.20934Public Religion Research InstituteA/B2.129168741.0054.0041.5965051.95343Quinnipiac UniversityB+1.514171636.0044.0037.7503742.74239RMG ResearchB/C0.836287147.0051.0046.4855150.53722Rasmussen Reports/Pulse Opinion ResearchC+0.200411457.0043.0051.6083944.62601RealClear Opinion ResearchB/C1.220347242.0056.0042.0637255.04240Reconnect Research/Roanoke College1.016589144.0047.0042.8330449.87660Redfield & Wilton Strategies0.851365742.8845.0843.7026649.16586Research Co.B-1.241184838.0058.0038.0319957.67174Saint Leo UniversityC/D0.556972444.0051.0043.2669550.75236Selzer & Co.A+2.141985440.0056.0040.0496257.71622Siena College/The New York Times UpshotA+2.621376841.0056.0040.6822556.55250Spry StrategiesB/C0.938346848.9150.0446.1988651.79570Suffolk UniversityA1.777426146.9044.0045.9219644.49725SurveyMonkeyD-0.197056448.0050.0045.6133249.24812SurveyUSAA2.217400044.0051.0043.3126551.43688TargetSmartB/C1.010745645.0051.0044.7656351.17413Tarrance GroupB/C1.301146241.0053.0040.0719353.83089The Washington PostA+2.171378043.0056.0043.7180654.68988The Washington Post/George Mason UniversityA+3.020610243.0055.0043.7180653.68988The Washington Post/Kaiser Family Foundation1.667892937.0063.0039.0039459.54274USC Dornsife/Los Angeles TimesB/C1.225847839.0047.0041.3939546.66338University of Maryland/The Washington PostA+3.276925937.0063.0037.7180661.68988University of Massachusetts LowellA/B1.267318544.0056.0043.7178655.40041Vox Populi PollingB/C1.078662048.0052.0045.6474952.72510Whitman Insight Strategies0.613958342.0056.0041.9249055.50308Winston GroupB/C1.218078940.0046.0040.5271247.83024YouGovB1.047077441.0035.0041.9486436.76658YouGov Blue0.841380543.0055.0042.8280154.50455YouGov Blue/Data for Progress0.855517044.0054.0043.5676953.60740Zogby AnalyticsC+0.938135447.0043.0043.7430044.94596icitizen0.580838642.0058.0043.9148152.03127ØptimusB/C0.196465939.5060.5040.2469457.18620\n\n\nI am also going to provide a brief look into my conversation with ChatGPT and how it helped me create this graph. Note: I ended up changing datasets halfway through this assignment so not all of the data names pertain to the graph I reproduced. I have provided the link here. Some of this conversation is irrelevant to the process I ended up using (i.e. I at first thought I was going to be able to share CSV content directly to ChatGPT)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Loading dslabs package\n\n#loading dslabs \nlibrary(dslabs)\n\nWarning: package 'dslabs' was built under R version 4.3.2\n\n#viewing help file for gapminder data\nhelp(\"gapminder\")\n\nstarting httpd help server ... done\n\n\nOverview of Data Structure\n\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n\nSummary of the Data & Viewing the Data\n\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\nDetermining the class of gapminder\n\nclass(gapminder)\n\n[1] \"data.frame\"\n\n\nAdding tidyverse to the library\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\n\n\nWarning: package 'readr' was built under R version 4.3.2\n\n\nWarning: package 'stringr' was built under R version 4.3.2\n\n\nWarning: package 'lubridate' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nAssigning African countries to new vector & viewing new vector\n\nafricadata &lt;- gapminder %&gt;%\n  filter(continent == \"Africa\")\n\nViewing structure and summary of africadata\n\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\nNew object containing only infant_mortality and life_expectancy\n\ninfant_expect &lt;- subset(africadata, select = c(infant_mortality, life_expectancy))\n\n## looking a structure of infant_expect\nstr(infant_expect)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\n## summary of infant_expect \nsummary(infant_expect)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n\nNew object containing only population and life_expectancy\n\npop_expect &lt;- subset(africadata, select = c(life_expectancy, population))\n\n##structure of pop_expect\nstr(pop_expect)\n\n'data.frame':   2907 obs. of  2 variables:\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n\n##summary of pop_expect\nsummary(pop_expect)\n\n life_expectancy   population       \n Min.   :13.20   Min.   :    41538  \n 1st Qu.:48.23   1st Qu.:  1605232  \n Median :53.98   Median :  5570982  \n Mean   :54.38   Mean   : 12235961  \n 3rd Qu.:60.10   3rd Qu.: 13888152  \n Max.   :77.60   Max.   :182201962  \n                 NA's   :51         \n\n\nLibrary ggplot2 for future plots\n\nlibrary(ggplot2)\n\nPlotting life expectancy as a function of infant mortality\n\nexpect_infant_plot &lt;- ggplot(infant_expect, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point()\n\nexpect_infant_plot\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nPlotting life expectancy as a function of population\n\nexpect_pop_plot &lt;- ggplot(pop_expect, aes(x = population, y = life_expectancy)) +\n  geom_point() + \n  scale_y_continuous()\n\nexpect_pop_plot\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nTo explore why there are “streaks” of data in the plot above, I manually sorted africadata by country to see how population and life_expectancy change over time. By looking at the data this way, I could see that over time as population size increased, life expectancy increased as well. For example, from 1960 to 2015, Algeria’s population increased from 11,124,892to 39,666,519 and life expectancy increased from 47.50 years to 76.40 years.\nFinding which years have NA values\n\ncolSums(is.na(africadata)) ##finding out how many NA values exist for each column \n\n         country             year infant_mortality  life_expectancy \n               0                0              226                0 \n       fertility       population              gdp        continent \n              51               51              637                0 \n          region \n               0 \n\nwhere_na_infant &lt;- africadata %&gt;% ## creating object that clearly shows which years have missing values for infant mortality\n  filter(is.na(infant_mortality))\n\nFiltering africadata to only include the year 2000\n\nafrica_twothousand &lt;- africadata %&gt;%\n  filter(year == \"2000\")\n\n\nstr(africa_twothousand) ## double checking structure\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africa_twothousand) ## triple checking structure \n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\nPlotting life expectancy as a function of infant mortality for the year 2000\n\nexpect_infant_plot2000 &lt;- ggplot(africa_twothousand, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point()\n\nexpect_infant_plot2000\n\n\n\n\n\n\n\n\nPlotting life expectancy as a function of population for the year 2000\n\nexpect_pop_plot2000 &lt;- ggplot(africa_twothousand, aes(x = population, y = life_expectancy)) +\n  geom_point() + \n  scale_y_continuous()\n\nexpect_pop_plot2000\n\n\n\n\n\n\n\n\nBeginning simple model fits\n\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, africa_twothousand)\n\nfit2 &lt;- lm(life_expectancy ~ population, africa_twothousand)\n\nSummary of both fit models\n\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africa_twothousand)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africa_twothousand)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n\nFor the model fitting life expectancy as the outcome and infant mortality as the predictor, the p-value is statistically significant at 2.826 x 10^-8. This p-value alone could suggest an association between life expectancy and infant mortality.\nFor the model fitting life expectancy as the outcome and population as the predictor, the p-value is 0.6159, well above the typical alpha = 0.05 threshold. This indicates that there is no evidence to suggest an association or correlation between life expectancy and population.\nTHIS SECTION CONTRIBUTED BY KEVIN KOSEWICK\nFor this part of the exercise, I will be using the “divorce_margarine” data set that contains divorce rate/1000 people in Maine, per capita margarine consumption (lbs) in the U.S., and the year. We’ll load dslabs and view the dataset.\n\n#loading dslabs \nlibrary(dslabs)\n\n\n#viewing help file for divorce_margarine data\nhelp(\"divorce_margarine\")\n\nWe’ll load the overview and summary of the data.\n\n#structure of data\nstr(divorce_margarine)\n\n'data.frame':   10 obs. of  3 variables:\n $ divorce_rate_maine              : num  5 4.7 4.6 4.4 4.3 4.1 4.2 4.2 4.2 4.1\n $ margarine_consumption_per_capita: num  8.2 7 6.5 5.3 5.2 4 4.6 4.5 4.2 3.7\n $ year                            : int  2000 2001 2002 2003 2004 2005 2006 2007 2008 2009\n\n#summary of data\nsummary(divorce_margarine)\n\n divorce_rate_maine margarine_consumption_per_capita      year     \n Min.   :4.10       Min.   :3.700                    Min.   :2000  \n 1st Qu.:4.20       1st Qu.:4.275                    1st Qu.:2002  \n Median :4.25       Median :4.900                    Median :2004  \n Mean   :4.38       Mean   :5.320                    Mean   :2004  \n 3rd Qu.:4.55       3rd Qu.:6.200                    3rd Qu.:2007  \n Max.   :5.00       Max.   :8.200                    Max.   :2009  \n\n\nWe’ll now inspect the class of the data set and load the tidyverse package to begin data processing.\n\n#check the class\nclass(divorce_margarine)\n\n[1] \"data.frame\"\n\n#load tidyverse\nlibrary(tidyverse)\n\nWe will create an object with only divorce rate and margarine consumption.\n\n#first, make an object with divorce_margarine data set\nfulldivorce&lt;- divorce_margarine\n\n#next, make the object with only divorce_rate_maine and margarine_consumption_per_capita\nmargdivorce &lt;- subset(divorce_margarine, select = c(divorce_rate_maine, margarine_consumption_per_capita))\n\n#structure and summary checks\nstr(margdivorce)\n\n'data.frame':   10 obs. of  2 variables:\n $ divorce_rate_maine              : num  5 4.7 4.6 4.4 4.3 4.1 4.2 4.2 4.2 4.1\n $ margarine_consumption_per_capita: num  8.2 7 6.5 5.3 5.2 4 4.6 4.5 4.2 3.7\n\nsummary(margdivorce)\n\n divorce_rate_maine margarine_consumption_per_capita\n Min.   :4.10       Min.   :3.700                   \n 1st Qu.:4.20       1st Qu.:4.275                   \n Median :4.25       Median :4.900                   \n Mean   :4.38       Mean   :5.320                   \n 3rd Qu.:4.55       3rd Qu.:6.200                   \n Max.   :5.00       Max.   :8.200                   \n\n\nPlot divorce rate as a function of margarine consumption.\n\n#load ggplot for plot design\nlibrary(ggplot2)\n#plot divorce as a function of margarine\ndivorce_margarine_plot &lt;- ggplot(margdivorce, aes(x = divorce_rate_maine, y = margarine_consumption_per_capita)) +\n  geom_point()\n#load the plot\nplot(divorce_margarine_plot)\n\n\n\n\n\n\n\n\nThe plot indicates a strong positive correlation between margarine consumption and divorce rates. The true enemy of all Maine marriages seems to be butter substitutes. Now we’ll plot divorce rates as a function of the year.\n\n#create an object with just year and divorce rates\nyeardivorce &lt;- subset(divorce_margarine, select = c(divorce_rate_maine, year))\n#plot divorce as a function of the year\ndivorce_year_plot &lt;- ggplot(yeardivorce, aes(x = divorce_rate_maine, y = year)) +\n  geom_point()\n#load the plot\nplot(divorce_year_plot)\n\n\n\n\n\n\n\n\nOur plot indicates that divorce rates have decreased over time in Maine. We’ll now make a plot to see how margarine consumption has changed over the years.\n\n#make an object with just margarine consumption and years\nyearmarg &lt;- subset(divorce_margarine, select = c(margarine_consumption_per_capita, year))\n#plot margarine consumption as a function of the year\nmargarine_year_plot &lt;- ggplot(yearmarg, aes(x = margarine_consumption_per_capita, y = year)) +\n  geom_point()\n#plot it\nplot(margarine_year_plot)\n\n\n\n\n\n\n\n\nOur plot indicates that margarine consumption has decreased over the years. The year is negatively correlated with both margarine consumption and divorce rates; however, divorce seems to be more frequent in years with higher margarine consumption. To make sure that America’s consumption of margarine is truly the reason for failed marriages in Maine, we’ll create some linear models. First, we’ll fit just margarine consumption as a predictor for divorce rates. Then, we’ll fit both year and margarine as predictors for divorce rates.\n\n#fit margarine as a predictor for divorce\nfit_margarine_only &lt;- lm(divorce_rate_maine ~ margarine_consumption_per_capita, divorce_margarine)\n\n#fit marg and year as predicotrs for divorce\nfit_margarine_year &lt;- lm(divorce_rate_maine ~ margarine_consumption_per_capita + year, divorce_margarine)\n\n#call both plots\nsummary(fit_margarine_only)\n\n\nCall:\nlm(formula = divorce_rate_maine ~ margarine_consumption_per_capita, \n    data = divorce_margarine)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.05583 -0.01816 -0.01452  0.03601  0.04625 \n\nCoefficients:\n                                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                      3.308626   0.048032   68.88 2.20e-12 ***\nmargarine_consumption_per_capita 0.201386   0.008735   23.05 1.33e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03841 on 8 degrees of freedom\nMultiple R-squared:  0.9852,    Adjusted R-squared:  0.9833 \nF-statistic: 531.5 on 1 and 8 DF,  p-value: 1.33e-08\n\nsummary(fit_margarine_year)\n\n\nCall:\nlm(formula = divorce_rate_maine ~ margarine_consumption_per_capita + \n    year, data = divorce_margarine)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.045018 -0.025107  0.000966  0.025113  0.046884 \n\nCoefficients:\n                                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                      -26.631668  20.119380  -1.324    0.227    \nmargarine_consumption_per_capita   0.229594   0.020629  11.130 1.05e-05 ***\nyear                               0.014862   0.009987   1.488    0.180    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03579 on 7 degrees of freedom\nMultiple R-squared:  0.9887,    Adjusted R-squared:  0.9855 \nF-statistic: 307.2 on 2 and 7 DF,  p-value: 1.517e-07\n\n\nOur models indicate that year is not a statistically significant predictor of divorce rates, but margarine consumption is. Both models apparently describe most of the variation as well given our R-squared values. These results would seem to indicate that we can attribute more frequent divorces in Maine to the amount of margarine Americans consume a year. However, if given a bit of thought, this correlation makes no sense and should not be equated to causation. Regardless, it’s a fun analysis to run."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "ABOUT ME",
    "section": "",
    "text": "Headshot\n\n\n\nEducation & Work Experience\nI received my BS in Public Health and a minor in Data Analytics from Furman University in 2023. While at Furman, I had the opportunity to intern and work with the Institute for the Advancement of Community Health (IACH) as an evaluation coordinator. Throughout my time at IACH, I had the privilege of working with community partners such as LiveWell Greenville, the Well-Being Partnership of Greenville (WBP), and the Greenville County School System on various evaluation projects. My main research and evaluation efforts were geared towards childhood obesity, food access, ad mental health, One of my main projects was assisting in the development of a Mental Health Indicator Dashboard for the WBP.\n\n\nSoftware Experience & Looking Forward\nI have experience with RStudio, LaTeX, and RMarkdown from previous coursework and evaluation projects. However, I am looking to finish this class with a greater understanding of RStudio as it particularly relates to LaTeX and RMarkdown. Additionally, I am excited to be exposed to new programs and softwares! Mainly, I am looking to become more comfortable performing analyses on a variety of different data and to gain more professional knowledge of these programs. With my minor in Data Analytics, I was allowed the exposure to statistical analysis, specifically in R.\n\n\nMe outside of Academia!\nIn my free time, my favorite thing to study is beer! I am currently working toward my second level of certification under the Cicerone Program which is, for lack of a better word, a program geared to helping individuals become “sommeliers” of beer. When I am not in class or in the library, you can most likely find me behind the bar at Creature Comforts. One of the main perks of working at a brewery is being exposed to the analytics involved in brewing beer! This article explains how Beer30 software can be used to better manage brewing data as a whole and increase predictive analysis measures. Come by and grab a pint!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "WELCOME!",
    "section": "",
    "text": "WELCOME!\nI am a first-year MPH candidate at the University of Georgia concentrating in Biostatistics. This site will include information about me, as well as my work completed in MADA.\n\nPlease use the Menu Bar above to have a look around.\nFeel free to contact me at egh14911@uga.edu if you have any questions!\n\n\n\n\nMy mom & I cheering on the Dawgs!"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/emmahardinparker/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  factor                   2     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable  n_missing complete_rate ordered n_unique top_counts      \n1 Gender                 0         1     FALSE          3 M: 4, F: 3, O: 2\n2 Smoking_Status         2         0.778 FALSE          2 Yes: 5, No: 2   \n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n3 Age                   0             1  39   15.3  22  28  32  51   64 ▇▂▂▂▃\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\nNow we’ll plot height stratified by smoking status. We’ll use a boxplot because the instructions said to although with 9 points across 3 strata this plot is misleading and useless.\n\np5 &lt;- mydata |&gt;\n  ggplot2::ggplot() +\n  ggplot2::aes(x = Smoking_Status, y = Height) +\n  ggplot2::geom_boxplot()\n\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here::here(\n  \"starter-analysis-exercise\",\n  \"results\",\n  \"figures\",\n  \"height-smoking-stratified.png\"\n)\nggplot2::ggsave(filename = figure_file, plot = p5) \n\nSaving 7 x 5 in image\n\n\nFinally we’ll plot height vs. age, with a scatterplot.\n\np6 &lt;- mydata |&gt;\n  ggplot2::ggplot() +\n  ggplot2::aes(x = Age, y = Height) +\n  ggplot2::geom_point()\n\nplot(p6)\n\n\n\n\n\n\n\nfigure_file = here::here(\n  \"starter-analysis-exercise\",\n  \"results\",\n  \"figures\",\n  \"height-age-stratified.png\"\n)\nggplot2::ggsave(filename = figure_file, plot = p6) \n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/emmahardinparker/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "eda2.html",
    "href": "eda2.html",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "",
    "text": "title: “An example exploratory analysis script”\nauthor: “Emma Hardin-Parker”\ndate: “1/18/2024”"
  },
  {
    "objectID": "eda2.html#output-html_document",
    "href": "eda2.html#output-html_document",
    "title": "EMMA HARDIN-PARKER: DATA ANALYSIS PORTFOLIO",
    "section": "output: html_document",
    "text": "output: html_document\n---\ntitle: “An example exploratory analysis script”\nauthor: “Andreas Handel”\ndate: “10/28/2021”\noutput: html_document\n---\nThis Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file.\nAs described in the `processing_code` materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files.\nAnd sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n# Setup\n```{r}\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\nlibrary(dplyr)\nlibrary(skimr)\nlibrary(ggplot2)\n```\nLoad the data.\n```{r}\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(“starter-analysis-exercise”,“data”,“processed-data”,“processeddata.rds”)\n#load data\nmydata &lt;- readRDS(data_location)\n```\n# Data exploration through tables\nShowing a bit of code to produce and save a summary table.\n```{r}\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n# save to file\nsummarytable_file = here(“starter-analysis-exercise”,“results”, “tables-files”, “summarytable.rds”)\nsaveRDS(summary_df, file = summarytable_file)\n```\nWe are saving the results to the `results/tables` folder. Structure the folders inside `results` such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. `readme.md` files inside each folder are a good idea.\n# Data exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n```{r}\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram()\nplot(p1)\nfigure_file = here(“starter-analysis-exercise”,“results”,“figures”,“height-distribution.png”)\nggsave(filename = figure_file, plot=p1)\n```\nNow weights.\n```{r}\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram()\nplot(p2)\nfigure_file = here(“starter-analysis-exercise”,“results”,“figures”,“weight-distribution.png”)\nggsave(filename = figure_file, plot=p2)\n```\nNow height as function of weight.\n```{r}\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method=‘lm’)\nplot(p3)\nfigure_file = here(“starter-analysis-exercise”,“results”,“figures”,“height-weight.png”)\nggsave(filename = figure_file, plot=p3)\n```\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n```{r}\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method=‘lm’)\nplot(p4)\nfigure_file = here(“starter-analysis-exercise”,“results”,“figures”,“height-weight-stratified.png”)\nggsave(filename = figure_file, plot=p4)\n```\n# Notes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Data Exercise",
    "section": "",
    "text": "For this assignment, I have chosen to create a synthetic data set containing randomly generated data about 100 NFL players.\n\n#Loading required packages \n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(lubridate)\nlibrary(here)\n\nhere() starts at /Users/emmahardinparker/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio\n\n\nBelow I am setting a seed for the sake of reproducibility, as well as defining the number of players I intend to create data for.\n\n#Setting a seed for reproducibility \nset.seed(129)\n\n#Defining the number of observations (100 players)\nn_players &lt;- 100\n\nBelow I am creating the actual data frame. I have decided to create an ID variable for each player that is numbered 1-100. I set the age variable to have a min of 22 and a max of 33. I originally tried to set the age variable using round & rnorm, but found that some players were listed as being as young as 16 and as old as 50. To avoid this, I set the minimum and maximum to roughly relate to the ages of most active NFL players. For the position variable, I decided to include both offensive and defensive players, however, I am very much aware that some randomized relational data points (forty_time & position) may result in ridiculous results. I set the height variable in centimeters and the weight variable in pounds. If needed for future analyses, I may convert the height variable into inches. I also got a quick look at the data using the head() function to briefly view the first five rows. I also took a deeper look after using the head() function to get some summary statistics of the data using both the summary() and glimpse() functions\n\n#Creating an empty data frame with placeholders for variables \n\nsyn_data &lt;- data.frame(\n  ID = numeric(n_players),\n  Age = numeric(n_players),\n  Position = character(n_players),\n  Forty_Time = numeric(n_players),\n  Height = numeric(n_players),\n  Weight = numeric(n_players)\n)\n\n#  Defining individual variables \n\nsyn_data$ID &lt;- 1:n_players\n\nsyn_data$Age &lt;- round(runif(n_players, min = 22, max = 33), 1)\n\nsyn_data$Position &lt;- purrr::map_chr(sample(c(\"QB\", \"RB\", \"WR\", \"DE\", \"CB\", \"LB\", \"TE\"), n_players, replace = TRUE), as.character)\n\nsyn_data$Forty_Time &lt;- runif(n_players, min = 4.2, max = 5.0)\n\nsyn_data$Height &lt;- round(runif(n_players, min = 177.8, max = 198.12), 1)\n\nsyn_data$Weight &lt;- round(rnorm(n_players, mean = 225, sd = 10), 1)\n\n# Viewing first 5 observations \nhead(syn_data, 5)\n\n  ID  Age Position Forty_Time Height Weight\n1  1 23.4       WR   4.840918  198.0  227.4\n2  2 25.5       TE   4.357144  195.3  218.9\n3  3 23.8       RB   4.550497  178.2  221.3\n4  4 25.4       CB   4.476869  195.4  235.7\n5  5 22.9       TE   4.722912  181.5  223.1\n\n## Taking a look at the generated data \nsummary(syn_data)\n\n       ID              Age          Position           Forty_Time   \n Min.   :  1.00   Min.   :22.00   Length:100         Min.   :4.211  \n 1st Qu.: 25.75   1st Qu.:24.85   Class :character   1st Qu.:4.392  \n Median : 50.50   Median :27.10   Mode  :character   Median :4.597  \n Mean   : 50.50   Mean   :27.21                      Mean   :4.593  \n 3rd Qu.: 75.25   3rd Qu.:29.80                      3rd Qu.:4.786  \n Max.   :100.00   Max.   :32.80                      Max.   :4.983  \n     Height          Weight     \n Min.   :178.1   Min.   :200.9  \n 1st Qu.:183.7   1st Qu.:218.5  \n Median :189.2   Median :224.8  \n Mean   :188.9   Mean   :224.9  \n 3rd Qu.:194.6   3rd Qu.:231.7  \n Max.   :198.1   Max.   :250.7  \n\nView(syn_data)\ndplyr::glimpse(syn_data)\n\nRows: 100\nColumns: 6\n$ ID         &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ Age        &lt;dbl&gt; 23.4, 25.5, 23.8, 25.4, 22.9, 28.4, 23.0, 26.1, 32.7, 22.2,…\n$ Position   &lt;chr&gt; \"WR\", \"TE\", \"RB\", \"CB\", \"TE\", \"WR\", \"LB\", \"WR\", \"DE\", \"QB\",…\n$ Forty_Time &lt;dbl&gt; 4.840918, 4.357144, 4.550497, 4.476869, 4.722912, 4.874354,…\n$ Height     &lt;dbl&gt; 198.0, 195.3, 178.2, 195.4, 181.5, 195.0, 188.3, 186.5, 180…\n$ Weight     &lt;dbl&gt; 227.4, 218.9, 221.3, 235.7, 223.1, 250.7, 234.5, 223.1, 239…\n\n\nAfter getting a quick look at the data ad seeing that it turned out the way I intended, I am now going to save the data as a CSV file into the data-exercise folder.\n\n##Saving synthetic data into CSV file within the data-exercise folder in repository \n\nwrite.csv(syn_data, here(\"data-exercise\", \"syn_data.csv\"), row.names = FALSE)\n\nI am now going to start generating some plots to further explore the data.\n\n##Boxplot of Forty Times grouped by Position \n\nggplot(syn_data, aes(x = Position, y = Forty_Time)) +\n  geom_boxplot() +\n  labs(x = \"Position\", y = \"Time in the Forty Yard Dash\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nFrom the plot above, we can see that Defensive Ends (DE) have the slowest forty-yard-dash time, on average, compared to the rest of the positions. This would be expected in real life as DEs are typically the largest players on the field and rarely can run at the same speed as skill position players. The top 3 fastest positions on average are cornerbacks (CB), quarterbacks (QB), and linebackers (LB). Though we would expect wide receivers (WR) and running backs (RB) to be among the fastest, this plot does not skew from what we would expect too severely.\n\n## Boxplot of Weight by Position \n\nggplot(syn_data, aes(x = Position, y = Weight)) +\n  geom_boxplot() +\n  labs(x = \"Position\", y = \"Weight (lbs)\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nThis plot shows the issues with randomized synthetic data. Per the NFL, defensive lineman average at 6’3” and 310 pounds. I would have to go into more depth data generation to ensure that associations are correct based off of real-life scenarios. For example, men are on average taller than women, and if the data were not structured correctly, the distribution of height between men and women would be correct. Creating this plot was a teaching moment and moving forward I need to be more careful when creating data like this.\nNow that I know that position and weight will not yield any accurate association, I am going to create one more plot of position and height to see if that association is more realistic.\n\nggplot(syn_data, aes(x = Position, y = Height)) +\n  geom_boxplot() +\n  labs(x = \"Position\", y = \"Height (cm)\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nThe original plot I created (not shown) did not generate the results I was looking for.I initially tried to use the rnorm() function to grab the mean, however, the last time I checked, there is not a 7’ tall linebacker in the NFL. To fix this, I went back to the variable definition code and changed rnorm() to runif() and set the min and max to 5’10” and 6’6”, respectively. As previously stated, the average height of a DE is 6’3”. Here, the average DE is around 6’1”. This plot now looks pretty decent, considering the small sample size (n = 100), To my surprise, this plot contains three outliers. Since this is my first time generating synthetic data, I was under the impression that randomly created fake data would not produce any true outliers.\nNow that I have created three exploratory plots, I am now going to fit some models to see if there are any statistically significant associations in the data. I am electing not to use position & weight, as the plot above shows clearly that the data was not created to be robust to real-life differences in association.\n\n## Fitting model between position and forty_time \n\nsyn_fit1 &lt;- lm(Forty_Time ~ Position, data = syn_data)\nsummary(syn_fit1)\n\n\nCall:\nlm(formula = Forty_Time ~ Position, data = syn_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.48826 -0.20019  0.01398  0.18668  0.45853 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  4.58537    0.07302  62.792   &lt;2e-16 ***\nPositionDE  -0.06399    0.09888  -0.647    0.519    \nPositionLB   0.11360    0.09309   1.220    0.225    \nPositionQB  -0.08087    0.09713  -0.833    0.407    \nPositionRB   0.01360    0.09561   0.142    0.887    \nPositionTE  -0.02846    0.09561  -0.298    0.767    \nPositionWR   0.04452    0.08872   0.502    0.617    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2309 on 93 degrees of freedom\nMultiple R-squared:  0.07307,   Adjusted R-squared:  0.01326 \nF-statistic: 1.222 on 6 and 93 DF,  p-value: 0.3022\n\n\nFrom this summary table we can see that the association between the dependent variable (forty time) and independent variable (position) is not statistically significant. The residual median is close to zero, indicating that there there may be little variation in our residuals. This also indicates that our residuals would be somewhat symmetrical and would predict correctly on both high and low ends of a q-q plot. However, the multiple r-squared value of 0.0527 says that the position explains only 5.27% of the variation in forty yard dash time. Finally, the p-value sits slightly over our typical 0.05 threshold, which would indicate there is no strong evidence that associates position and forty yard dash time.\n\n# Creating second fit model\n\nsyn_fit2 &lt;- lm(Height ~ Position, data = syn_data)\nsummary(syn_fit2)\n\n\nCall:\nlm(formula = Height ~ Position, data = syn_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-12.544  -5.431   0.285   4.931  11.114 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 189.9300     1.9156  99.147   &lt;2e-16 ***\nPositionDE   -3.8217     2.5938  -1.473    0.144    \nPositionLB    1.7137     2.4420   0.702    0.485    \nPositionQB    0.1623     2.5480   0.064    0.949    \nPositionRB   -3.0443     2.5082  -1.214    0.228    \nPositionTE   -1.3514     2.5082  -0.539    0.591    \nPositionWR   -1.4300     2.3275  -0.614    0.540    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.058 on 93 degrees of freedom\nMultiple R-squared:  0.0819,    Adjusted R-squared:  0.02267 \nF-statistic: 1.383 on 6 and 93 DF,  p-value: 0.2298\n\n\nThis model suggests that there is not a statistically significant association between height and position. If we look at the multiple R-squared value alone we can see that position only explains 2.92% of the variation of height. Also, the p-value sits at 0.8, which is significantly higher than the typical 95% alpha = 0.05 level."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "CDC Data Exercise",
    "section": "",
    "text": "Data Introduction and Loading\nI accessed the data for this assignment at this link. I chose a data set from the National Center for Health Statistics (NCHS) that provides data on quarterly provisional estimates for selected birth indicators. These indicators include teen birth rate, low birth weight, NICU admissions, pre-term births, etc. These indicators are stratified by race/ethnicity and age groups. There is an overall Rate column that is subsetted into “per 100 births” or “per 1,000 population.”\nI am now going to load any required packages along with the original, uncleaned data set.\n\nlibrary(readr)\nlibrary(here)\n\nhere() starts at /Users/emmahardinparker/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ purrr     1.0.2\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\nnchs_data &lt;- read.csv(\"~/Desktop/NCHS_-_VSRR_Quarterly_provisional_estimates_for_selected_birth_indicators_20240206.csv\")\nView(nchs_data)\n\n\n\nInitial Data Exploration and Cleaning\nI am now going to get a quick look at the data by using the str(), summary(), and glimpse() functions.\n\nstr(nchs_data)\n\n'data.frame':   1100 obs. of  8 variables:\n $ Year.and.Quarter       : chr  \"2023 Q3\" \"2023 Q3\" \"2023 Q3\" \"2023 Q3\" ...\n $ Topic                  : chr  \"Birth Rates\" \"Birth Rates\" \"Birth Rates\" \"Birth Rates\" ...\n $ Topic.Subgroup         : chr  \"Age-specific Birth Rates\" \"Age-specific Birth Rates\" \"Age-specific Birth Rates\" \"Age-specific Birth Rates\" ...\n $ Indicator              : chr  \"10-14 years\" \"10-14 years\" \"10-14 years\" \"10-14 years\" ...\n $ Race.Ethnicity.Category: chr  \"All races and origins\" \"Hispanic\" \"Non-Hispanic Black\" \"Non-Hispanic White\" ...\n $ Rate                   : num  0.2 0.3 0.4 0.1 13.4 21.3 19.7 8.7 56 78.3 ...\n $ Unit                   : chr  \"per 1,000 population\" \"per 1,000 population\" \"per 1,000 population\" \"per 1,000 population\" ...\n $ Significant            : chr  \"\" \"\" \"*\" \"\" ...\n\nsummary(nchs_data)\n\n Year.and.Quarter      Topic           Topic.Subgroup      Indicator        \n Length:1100        Length:1100        Length:1100        Length:1100       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Race.Ethnicity.Category      Rate            Unit           Significant       \n Length:1100             Min.   :  0.10   Length:1100        Length:1100       \n Class :character        1st Qu.:  7.54   Class :character   Class :character  \n Mode  :character        Median : 14.70   Mode  :character   Mode  :character  \n                         Mean   : 28.21                                        \n                         3rd Qu.: 49.06                                        \n                         Max.   :114.30                                        \n\nglimpse(nchs_data)\n\nRows: 1,100\nColumns: 8\n$ Year.and.Quarter        &lt;chr&gt; \"2023 Q3\", \"2023 Q3\", \"2023 Q3\", \"2023 Q3\", \"2…\n$ Topic                   &lt;chr&gt; \"Birth Rates\", \"Birth Rates\", \"Birth Rates\", \"…\n$ Topic.Subgroup          &lt;chr&gt; \"Age-specific Birth Rates\", \"Age-specific Birt…\n$ Indicator               &lt;chr&gt; \"10-14 years\", \"10-14 years\", \"10-14 years\", \"…\n$ Race.Ethnicity.Category &lt;chr&gt; \"All races and origins\", \"Hispanic\", \"Non-Hisp…\n$ Rate                    &lt;dbl&gt; 0.2, 0.3, 0.4, 0.1, 13.4, 21.3, 19.7, 8.7, 56.…\n$ Unit                    &lt;chr&gt; \"per 1,000 population\", \"per 1,000 population\"…\n$ Significant             &lt;chr&gt; \"\", \"\", \"*\", \"\", \"*\", \"*\", \"*\", \"*\", \"*\", \"*\",…\n\n\nThe data set has 1,110 observations and 8 variables. At first glance there doesn’t seem to be any NA values, but I am going to check using the NA values. After print nchs_na, I found that there were no NA values, however, I took that command out as it printed “FALSE” for every observation in the data set. Also, I noticed in the Significant column, that significant values are coded with asteriks. I could imagine that would make future exploratory analyses difficult, so I plan to recode significant values to 1 and non-significant values to 0.\n\nnchs_na &lt;- is.na(nchs_data)\n\nnchs_data &lt;- nchs_data %&gt;%\n  mutate(Significant = as.character(Significant))\n\nnchs_recode &lt;- nchs_data %&gt;%\n  mutate(Significance_Status = case_when(\n    Significant == \"*\" ~ 1,\n    Significant == \"\" ~ 0,\n    TRUE ~ NA_integer_  \n  ))\n\nTo accomplish this I used the is.na() function to determine if there were any NA values in the data set. I then mutated the Significant column to treat the observations as characters (* or missing) by using as.character(). I then mutated a new variable, Significance_Status to recode the missing values as zeroes and the asteriks as ones.\n\n\nExploratory Data Analysis\nI am now going to create an exploratory plot to see which race/ethnicity category had the largest birth rate by Year & Quarter.\n\nfiltered_race &lt;- nchs_recode %&gt;%\n  filter(Race.Ethnicity.Category != \"All races and origins\")  # Remove rows where 'Race' is \"All\"\n\n\nbirth_rate_bar &lt;- filtered_race %&gt;%\n  group_by(Year.and.Quarter) %&gt;%\n  filter(Topic == \"Birth Rates\") %&gt;% \n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate, fill = Race.Ethnicity.Category)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Birth Rate Rate by Age Category and Race\",\n       x = \"Age Category / Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  theme(axis.text.x = element_text(angle = 60, hjust = 1))  \n\nhispanic_rate_bar &lt;- nchs_recode %&gt;%\n  filter(Race.Ethnicity.Category == \"Hispanic\") %&gt;%\n  filter(Topic == \"Birth Rates\") %&gt;%\n  group_by(Year.and.Quarter) %&gt;%\n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate, fill = Race.Ethnicity.Category)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Birth Rate Rate by Age Category and Race\",\n       x = \"Age Category / Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  theme(axis.text.x = element_text(angle = 60, hjust = 1)) \n\nwhite_rate_bar &lt;- nchs_recode %&gt;%\n  filter(Race.Ethnicity.Category == \"Non-Hispanic White\") %&gt;%\n  filter(Topic == \"Birth Rates\") %&gt;%\n  group_by(Year.and.Quarter) %&gt;%\n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Birth Rate Rate by Age Category and Race\",\n       x = \"Age Category / Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +\n  scale_color_viridis_d()\n\nblack_rate_bar &lt;- nchs_recode %&gt;%\n  filter(Race.Ethnicity.Category == \"Non-Hispanic Black\") %&gt;%\n  filter(Topic == \"Birth Rates\") %&gt;%\n  group_by(Year.and.Quarter) %&gt;%\n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Birth Rate Rate by Age Category and Race\",\n       x = \"Age Category / Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  scale_color_viridis_b() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\nprint(hispanic_rate_bar)\n\n\n\n\n\n\n\nprint(black_rate_bar)\n\n\n\n\n\n\n\nprint(white_rate_bar)\n\n\n\n\n\n\n\n\nI am now going to create plots exploring the rate of low birthweight (per 100 births) by race\n\nlow_birth &lt;- filtered_race %&gt;%\n  filter(Topic.Subgroup == \"Low Birthweight Rates\") %&gt;%\n  group_by(Race.Ethnicity.Category) %&gt;%\n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate, fill = Race.Ethnicity.Category)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Low Birthweight Rates by Race\",\n       x = \"Age Category / Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  scale_color_identity() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \nprint(low_birth)\n\n\n\n\n\n\n\n\nI am now going to create a similar plot concerning preterm birth rates per 100 births by race.\n\npre_birth &lt;- filtered_race %&gt;%\n  filter(Topic.Subgroup == \"Preterm Birth Rates\") %&gt;%\n  group_by(Race.Ethnicity.Category) %&gt;%\n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate, fill = Race.Ethnicity.Category)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Preterm Birth Rates by Race\",\n       x = \"Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  scale_color_identity() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\nprint(pre_birth)\n\n\n\n\n\n\n\n\nI am now going to create a similar plot concerning NICU admission rates per 100 births by race.\n\nNICU &lt;- filtered_race %&gt;%\n  filter(Topic.Subgroup == \"NICU Admission Rates\") %&gt;%\n  group_by(Race.Ethnicity.Category) %&gt;%\n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate, fill = Race.Ethnicity.Category)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"NICU Admission Rates by Age Category and Race\",\n       x = \"Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  scale_color_identity() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\nprint(NICU)\n\n\n\n\n\n\n\n\nI am now going to create a similar plot exploring Teen Birth Rates by Age Category and Race\n\nteen_birth &lt;- filtered_race %&gt;%\n  filter(Topic.Subgroup == \"Teen Birth Rates\") %&gt;%\n  group_by(Race.Ethnicity.Category) %&gt;%\n  ggplot(aes(x = interaction(Indicator, Race.Ethnicity.Category), y = Rate, fill = Race.Ethnicity.Category)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \" Teen Birth Rate Rate by Age Category and Race\",\n       x = \"Age Category / Race\",\n       y = \"Rate\") +\n  scale_x_discrete(labels = function(x) gsub(\"\\\\.\", \"-\", x)) +  \n  scale_color_viridis_b() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\nprint(teen_birth)"
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html",
    "href": "fitting-exercise/fitting-exercise.html",
    "title": "Fitting Exercise",
    "section": "",
    "text": "Loading necessary packages\n\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(yardstick)\nlibrary(pROC)\n\nImporting the Mavoglurant dataset from this GitHub repository\n\nmavoglurant &lt;- read.csv(\"~/Desktop/BIOS8060E/emmahardinparker-MADA-portfolio/fitting-exercise/Mavoglurant_A2121_nmpk.csv\")\n\n\nExploratory Data Analysis of the Mavoglurant data set\n\n# Summary table of the data prior to any mutation or cleaning \nprint(summary(mavoglurant))\n\n       ID             CMT             EVID              EVI2       \n Min.   :793.0   Min.   :1.000   Min.   :0.00000   Min.   :0.0000  \n 1st Qu.:832.0   1st Qu.:2.000   1st Qu.:0.00000   1st Qu.:0.0000  \n Median :860.0   Median :2.000   Median :0.00000   Median :0.0000  \n Mean   :858.8   Mean   :1.926   Mean   :0.07394   Mean   :0.1613  \n 3rd Qu.:888.0   3rd Qu.:2.000   3rd Qu.:0.00000   3rd Qu.:0.0000  \n Max.   :915.0   Max.   :2.000   Max.   :1.00000   Max.   :4.0000  \n      MDV                DV               LNDV            AMT        \n Min.   :0.00000   Min.   :   0.00   Min.   :0.000   Min.   : 0.000  \n 1st Qu.:0.00000   1st Qu.:  23.52   1st Qu.:3.158   1st Qu.: 0.000  \n Median :0.00000   Median :  74.20   Median :4.306   Median : 0.000  \n Mean   :0.09373   Mean   : 179.93   Mean   :4.085   Mean   : 2.763  \n 3rd Qu.:0.00000   3rd Qu.: 283.00   3rd Qu.:5.645   3rd Qu.: 0.000  \n Max.   :1.00000   Max.   :1730.00   Max.   :7.456   Max.   :50.000  \n      TIME             DOSE            OCC             RATE       \n Min.   : 0.000   Min.   :25.00   Min.   :1.000   Min.   :  0.00  \n 1st Qu.: 0.583   1st Qu.:25.00   1st Qu.:1.000   1st Qu.:  0.00  \n Median : 2.250   Median :37.50   Median :1.000   Median :  0.00  \n Mean   : 5.851   Mean   :37.37   Mean   :1.378   Mean   : 16.55  \n 3rd Qu.: 6.363   3rd Qu.:50.00   3rd Qu.:2.000   3rd Qu.:  0.00  \n Max.   :48.217   Max.   :50.00   Max.   :2.000   Max.   :300.00  \n      AGE            SEX             RACE              WT        \n Min.   :18.0   Min.   :1.000   Min.   : 1.000   Min.   : 56.60  \n 1st Qu.:26.0   1st Qu.:1.000   1st Qu.: 1.000   1st Qu.: 73.30  \n Median :31.0   Median :1.000   Median : 1.000   Median : 82.60  \n Mean   :32.9   Mean   :1.128   Mean   : 7.415   Mean   : 83.16  \n 3rd Qu.:40.0   3rd Qu.:1.000   3rd Qu.: 2.000   3rd Qu.: 90.60  \n Max.   :50.0   Max.   :2.000   Max.   :88.000   Max.   :115.30  \n       HT       \n Min.   :1.520  \n 1st Qu.:1.710  \n Median :1.780  \n Mean   :1.762  \n 3rd Qu.:1.820  \n Max.   :1.930  \n\n\nPlotting the outcome variable (DV) as a function of time, stratified by DOSE, and grouped by ID\n\n# Plot DV vs. time, stratified by DOSE and grouped by ID\ndv_dose &lt;- ggplot(mavoglurant, aes(x = TIME, y = DV, group = ID, color = DOSE)) +\n  geom_line() +\n  geom_point() +\n  labs(x = \"Time\", y = \"Outcome Variable (DV)\", color = \"Dose\") +\n  ggtitle(\"Outcome Variable vs. Time Stratified by Dose\") +\n  theme_minimal()\nprint(dv_dose)\n\n\n\n\n\n\n\n\nFiltering the data set to only include OCC = 1 observations\n\nstrat_mavo &lt;- mavoglurant %&gt;%\n  filter(OCC == \"1\")\n\nFiltering the data set to only include non zero values for TIME, computing the sum of DV and assigning it to variable Y,\n\n# Exclude observations with TIME = 0\nfiltered_mavo &lt;- strat_mavo %&gt;%\n  filter(TIME != 0)\n\n# Compute the sum of DV variable for each individual\nsummarized_mavo &lt;- filtered_mavo %&gt;%\n  group_by(ID) %&gt;%\n  summarize(Y = sum(DV))\n\n# Create a data frame with observations where TIME == 0\ntime_zero_data &lt;- strat_mavo %&gt;%\n  filter(TIME == 0)\n\n# Join the summarized data with the data at time zero\njoined_mavo &lt;- left_join(summarized_mavo, time_zero_data, by = \"ID\")\n\n# Print the dimensions of the combined data frame\ndim(joined_mavo)\n\n[1] 120  18\n\n\nConverting RACE and SEX variables to factor variables and only including necessary columns as well as printing a summary table of the joined data set.\n\n# Convert RACE and SEX to factor variables\njoined_mavo &lt;- joined_mavo %&gt;%\n  mutate(RACE = factor(RACE),\n         SEX = factor(SEX))\n\n# Keep only the desired variables\njoined_mavo &lt;- joined_mavo %&gt;%\n  select(Y, DOSE, AGE, SEX, RACE, WT, HT)\n\n# View the first few rows of the joined data set\nhead(joined_mavo)\n\n# A tibble: 6 × 7\n      Y  DOSE   AGE SEX   RACE     WT    HT\n  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2691.    25    42 1     2      94.3  1.77\n2 2639.    25    24 1     2      80.4  1.76\n3 2150.    25    31 1     1      71.8  1.81\n4 1789.    25    46 2     1      77.4  1.65\n5 3126.    25    41 2     2      64.3  1.56\n6 2337.    25    27 1     2      74.1  1.83\n\n# Summary Table of joined_mavo \nprint(summary(joined_mavo))\n\n       Y               DOSE            AGE        SEX     RACE   \n Min.   : 826.4   Min.   :25.00   Min.   :18.00   1:104   1 :74  \n 1st Qu.:1700.5   1st Qu.:25.00   1st Qu.:26.00   2: 16   2 :36  \n Median :2349.1   Median :37.50   Median :31.00           7 : 2  \n Mean   :2445.4   Mean   :36.46   Mean   :33.00           88: 8  \n 3rd Qu.:3050.2   3rd Qu.:50.00   3rd Qu.:40.25                  \n Max.   :5606.6   Max.   :50.00   Max.   :50.00                  \n       WT               HT       \n Min.   : 56.60   Min.   :1.520  \n 1st Qu.: 73.17   1st Qu.:1.700  \n Median : 82.10   Median :1.770  \n Mean   : 82.55   Mean   :1.759  \n 3rd Qu.: 90.10   3rd Qu.:1.813  \n Max.   :115.30   Max.   :1.930  \n\n\nNow it’s time to create some figures and tables to explore the new joined data set, joined_mavo. Since a codebook was not provided, I am going to create some plots to try to assume which values of SEX (1 or 2) correlate with Male and Female.\n\n# Relationship between SEX and DOSE\n\nsex_dose &lt;- ggplot(joined_mavo, aes(x = DOSE, fill = SEX)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  labs(x = \"Dose\", y = \"Count\", fill = \"SEX\") +\n  ggtitle(\"Relationship between DOSE and SEX\") +\n  scale_fill_manual(values = c(\"1\" = \"lightblue\", \"2\" = \"lightgreen\")) +\n  theme_minimal()\nprint(sex_dose)\n\n\n\n\n\n\n\n#Relationship between SEX and WT (weight)\n\nsex_wt &lt;- ggplot(joined_mavo, aes(x = SEX, y = WT, fill = SEX)) +\n  geom_boxplot() +\n  labs(x = \"SEX\", y = \"Weight\", fill = \"SEX\") +\n  ggtitle(\"Relationship between Sex and Weight\") +\n  scale_fill_manual(values = c(\"1\" = \"lightblue\", \"2\" = \"lightgreen\")) +\n  theme_minimal()\nprint(sex_wt)\n\n\n\n\n\n\n\n\nAs we can see from the plot exploring the relationship between sex and dose, the sex assigned the value 1 had much higher doses on average than the sex assigned the value 2. When exploring the relationship between sex and weight, we can see that sex assigned the value 1 weighs considerably more on average than the sex assigned value 2. From these plots I can comfortably assume that SEX = 1 corresponds to Male and SEX = 2 corresponds to female.\nCreating plots to determine a relationship between AGE and Y.\n\ny_age &lt;- ggplot(joined_mavo, aes(x = AGE, y = Y)) +\n  geom_point() +\n  labs(x = \"Age\", y = \"Y\") +\n  ggtitle(\"Relationship between Y and Age\") +\n  theme_minimal()\nprint(y_age)\n\n\n\n\n\n\n\n\nFrom this plot we can see no discernible relationship between the outcome variable Y and Age.\n\n\nModel Fitting\nNow we are going to move onto model fitting. Please note that I had trouble using the rmse() function due to strange errors so I had to rework the coding process to calculate the RMSE and R-squared values. I also elected to use the pROC package to help me compute ROC-AUC values for the logistic models.\nFitting a linear model to the continuous outcome (Y) using the main predictor of interest, DOSE.\n\n# Fit a linear model\ny_dose_model &lt;- lm(Y ~ DOSE, data = joined_mavo)\n\n# Summarize the model\ntidy(y_dose_model)\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)    323.     199.        1.62 1.07e- 1\n2 DOSE            58.2      5.19     11.2  2.69e-20\n\n\nFitting a linear model to Y using all predictors\n\n# Fit a linear model using all predictors\ny_all_model &lt;- lm(Y ~ ., data = joined_mavo)\n\n# Summarize the model\ntidy(y_all_model)\n\n# A tibble: 9 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  3387.     1835.       1.85  6.76e- 2\n2 DOSE           59.9       4.88    12.3   2.05e-22\n3 AGE             3.16      7.82     0.403 6.88e- 1\n4 SEX2         -358.      217.      -1.65  1.02e- 1\n5 RACE2         155.      129.       1.21  2.31e- 1\n6 RACE7        -405.      448.      -0.904 3.68e- 1\n7 RACE88        -53.5     245.      -0.219 8.27e- 1\n8 WT            -23.0       6.40    -3.60  4.71e- 4\n9 HT           -748.     1104.      -0.678 4.99e- 1\n\n\nCalculating RMSE and R-Squared values for both models, y_dose_model & y_all_model.\n\n### y_dose_model calculations \n\n#Calculating predictions for y_dose_model \n\npreds_dose &lt;- predict(y_dose_model, newdata = joined_mavo)\n\n#Creating dataframe of original values of Y and predictions\npreds_dose_data &lt;- bind_cols(preds_dose, joined_mavo$Y) %&gt;%\n  rename(Y = \"...2\")\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n## Compute RMSE for y_dose_model\n\n# Calculate residuals\nresiduals &lt;- preds_dose - joined_mavo$Y\n\n# Compute RMSE\nrmse &lt;- sqrt(mean(residuals^2))\n\n# Compute R-squared\nr_squared &lt;- 1 - sum(residuals^2) / sum((joined_mavo$Y - mean(joined_mavo$Y))^2)\n\n# Print RMSE and R-squared\ncat(\"RMSE:\", rmse, \"\\n\")\n\nRMSE: 666.4618 \n\ncat(\"R-squared:\", r_squared, \"\\n\")\n\nR-squared: 0.5156446 \n\n\nThe RMSE value of 666 could indicate large amounts of error or poor model performance. The R-squared value of 0.51 (~51%) could also indicate poorer model performance as we would like to maximize R-squared.\n\n### y_all_model calculations\n\n#Calculating predictions for y_all_model \n\npreds_all &lt;- predict(y_all_model, newdata = joined_mavo)\n\n#Creating dataframe of original values of Y and predictions\npreds_all_data &lt;- bind_cols(preds_all, joined_mavo$Y) %&gt;%\n  rename(Y = \"...2\")\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n\n## Compute RMSE for y_dose_model\n\n# Calculate residuals\nresiduals2 &lt;- preds_all - joined_mavo$Y\n\n# Compute RMSE\nrmse2 &lt;- sqrt(mean(residuals2^2))\n\n# Compute R-squared\nr_squared2 &lt;- 1 - sum(residuals2^2) / sum((joined_mavo$Y - mean(joined_mavo$Y))^2)\n\n# Print RMSE and R-squared\ncat(\"RMSE:\", rmse2, \"\\n\")\n\nRMSE: 590.8535 \n\ncat(\"R-squared:\", r_squared2, \"\\n\")\n\nR-squared: 0.6193084 \n\n\nThis model performed better than the previous model. Our RMSE is lower (590) and our R-squared is higher at 0.619 (~62%).\nNow we are going to move on to logistic models for the binary outcome (SEX) using DOSE as the main predictor of interest.\n\n#Fit a logistic model to  SEX using the main predictor of interest,DOSE.\nlogit_sex_model &lt;- glm(SEX ~ DOSE, data = joined_mavo, family = binomial)\n\n# Summarize the model\ntidy(logit_sex_model)\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)  -0.765     0.854     -0.896   0.370\n2 DOSE         -0.0318    0.0243    -1.31    0.192\n\n\nNow I am going to fit a logistic model to sex using all predictors\n\n# Fit logistic model with all predictors\nlogit_model_all &lt;- glm(SEX ~ ., data = joined_mavo, family = binomial)\n\n# Summarize the model\ntidy(logit_model_all)\n\n# A tibble: 9 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  60.3     18.0         3.34   0.000824\n2 Y            -0.00104  0.000963   -1.08   0.280   \n3 DOSE         -0.0308   0.0776     -0.396  0.692   \n4 AGE           0.0834   0.0607      1.37   0.170   \n5 RACE2        -1.93     1.37       -1.40   0.161   \n6 RACE7         0.118    3.85        0.0306 0.976   \n7 RACE88       -1.50     2.19       -0.683  0.494   \n8 WT           -0.0628   0.0794     -0.791  0.429   \n9 HT          -33.2     11.1        -3.00   0.00274 \n\n\nComputing ROC-AUC and accuracy for logit_sex_model\n\n##ACCURACY \n\n# Predict SEX using the logistic model with only DOSE as a predictor\npredsdose &lt;- predict(logit_sex_model, type = \"response\")\n\n# Convert predicted probabilities to binary predictions (0 or 1)\npreds_dose_binary &lt;- ifelse(predsdose &gt; 0.5, 1, 0)\n\n# Compute accuracy\naccuracy &lt;- mean(preds_dose_binary == joined_mavo$SEX)\n\n# Print accuracy\ncat(\"Accuracy:\", accuracy, \"\\n\")\n\nAccuracy: 0 \n\n##ROC-AUC \n\n# Compute ROC-AUC for the logistic model with only DOSE as a predictor\nroc_auc &lt;- roc(joined_mavo$SEX, predict(logit_sex_model, type = \"response\"))\n\nSetting levels: control = 1, case = 2\n\n\nSetting direction: controls &lt; cases\n\n# Calculate AUC\nauc &lt;- auc(roc_auc)\n\n# Print ROC-AUC\ncat(\"ROC-AUC for the logistic model with only DOSE as a predictor:\", auc, \"\\n\")\n\nROC-AUC for the logistic model with only DOSE as a predictor: 0.5919471 \n\n\nAn accuracy of 0 indicates that the model’s predictions did not match any of the observed values in the data. A ROC-AUC value of 0.59 is not particularly great as it could suggest that the model’s predictions are not far off from what could be considered random chance.\nComputing ROC-AUC and accuracy for logit_model_all\n\n##ACCURACY\n\n# Predict SEX using the logistic model with all predictors\npreds_sex &lt;- predict(logit_model_all, type = \"response\")\n\n# Convert predicted probabilities to binary predictions (0 or 1)\npreds_binary_sex &lt;- ifelse(preds_sex &gt; 0.5, 1, 0)\n\n# Compute accuracy\naccuracy2 &lt;- mean(preds_binary_sex == joined_mavo$SEX)\n\n# Print accuracy\ncat(\"Accuracy:\", accuracy2, \"\\n\")\n\nAccuracy: 0.025 \n\n##ROC-AUC\n\n# Compute ROC-AUC for the logistic model with only DOSE as a predictor\nroc_auc2 &lt;- roc(joined_mavo$SEX, predict(logit_model_all, type = \"response\"))\n\nSetting levels: control = 1, case = 2\n\n\nSetting direction: controls &lt; cases\n\n# Calculate AUC\nauc2 &lt;- auc(roc_auc2)\n\n# Print ROC-AUC\ncat(\"ROC-AUC for the logistic model with only DOSE as a predictor:\", auc2, \"\\n\")\n\nROC-AUC for the logistic model with only DOSE as a predictor: 0.9795673 \n\n\nAn accuracy level of 0.025 suggests that the model is only “correct” in its predictions for 2.5% of observations. However, this model produced a very high and favorable ROC-AUC value of 0.9795 indicating a strong predictive performance in distinguishing between the two outcomes of the binary variable."
  }
]