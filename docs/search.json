[
  {
    "objectID": "fitting-exercise/fitting-exercise.html",
    "href": "fitting-exercise/fitting-exercise.html",
    "title": "Fitting Exercise",
    "section": "",
    "text": "Loading necessary packages\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(yardstick)\nlibrary(pROC)\nlibrary(caret)\nImporting the Mavoglurant dataset from this GitHub repository\ndata_location &lt;- here::here(\"fitting-exercise\", \"Mavoglurant_A2121_nmpk.csv\")\n\n# Reading the CSV file into a data frame\nmavoglurant &lt;- readr::read_csv(data_location)\n\nRows: 2678 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (17): ID, CMT, EVID, EVI2, MDV, DV, LNDV, AMT, TIME, DOSE, OCC, RATE, AG...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "fitting-exercise/fitting-exercise.html#model-predictions-and-uncertainty",
    "href": "fitting-exercise/fitting-exercise.html#model-predictions-and-uncertainty",
    "title": "Fitting Exercise",
    "section": "Model predictions and uncertainty",
    "text": "Model predictions and uncertainty\n\n# set the seed for reproducibility\nrngseed = 12345\nset.seed(rngseed)\n\n# create 100 bootstraps with the training data\nbootstraps &lt;- bootstraps(data = train_data, times = 100)\n\n# create empty vector to store predictions list \npreds_bs &lt;- vector(\"list\", length = length(bootstraps))\nfor (i in 1:length(bootstraps)) {# for-loop to fit the modelto make predictions of the bootstrap\ndat_sample &lt;- analysis(bootstraps$splits[[i]])  \n# fitting the model using the created bootstrap dat_sample\nmodel &lt;- lm(Y ~ DOSE + AGE + HT + WT + SEX, data = dat_sample) \n\n#Recording the predictions \npredictions &lt;- predict(model, newdata = train_data) \npreds_bs[[i]] &lt;- predictions # store predictions in the empty vector\n}\n# bootstrap sample \nsample &lt;- analysis(bootstraps$splits[[i]])\nhead(sample)\n\n# A tibble: 6 × 6\n      Y  DOSE   AGE SEX      WT    HT\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 1958.  25      26 1      70.5  1.68\n2 1949.  50      39 1      75.7  1.78\n3 2772.  37.5    28 1      78.3  1.72\n4 2978.  50      49 1      97.3  1.80\n5 2749.  37.5    41 1      82.6  1.83\n6 2155.  37.5    30 1      85.4  1.86\n\n\nNow I have preditions stored, I will compute the mean and 95% confidence intervals.\n\n# I will create an array to store the predictions\npsamples &lt;- length(preds_bs)\npdatapoints &lt;- length(preds_bs[[1]])  \npreds_array &lt;- array(NA, dim = c(psamples, pdatapoints))\n\n# storing predictions from bootstrappping\nfor (i in 1:psamples) {\n  preds_array[i,] &lt;- unlist(preds_bs[[i]])\n}\n# finding the Mean and confidence intervals \npreds &lt;- preds_array %&gt;% apply(2, quantile,  c(0.055, 0.5, 0.945)) %&gt;% t()\nhead(preds)\n\n         5.5%      50%    94.5%\n[1,] 3271.941 3347.935 3423.928\n[2,] 1966.299 2005.265 2044.231\n[3,] 2722.442 2774.500 2826.558\n[4,] 1956.486 2136.621 2316.756\n[5,] 2799.216 2919.028 3038.840\n[6,] 1116.766 1136.345 1155.924\n\n\nA figure that plots observed values on the x-axis, and point estimate (obtained from your original predictions on the training data), as well as median and the upper and lower bounds - obtained by the bootstrap sampling .\n\n# create a dataset for the figure\nfig_data &lt;- data.frame(observed = c(train_data$Y), points = c(ptrain2$.pred),\n                        mean = preds[, 2], lower_bound = preds[, 1],upper_bound = preds[, 3]\n)\n\n# A plot of obeserved, preditions, mean, and confidence intervals\nggplot(fig_data, aes(x = observed, y = points)) +\n  geom_point(color = \"black\") +  \n  geom_point(aes(y = mean), color = \"green\") + \n  geom_errorbar(aes(ymin = lower_bound, ymax = upper_bound), width = 0.1, color = \"blue\") + \n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\") +  # add 45 degree line\n  xlim(0, 5000) +\n  ylim(0, 5000) +\n  labs(x = \"Observed Values\", y = \"Predicted Values\")\n\nWarning: Removed 1 rows containing missing values (`geom_point()`).\nRemoved 1 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nThe data points in the scatter plot are clustered around the line of perfect fit, which suggests that the model’s predictions are generally accurate. However, there are also some data points that deviate from the line, indicating that the model’s predictions are not always perfect.\nThere seems to be a trend where the data points become more scattered as the observed values increase. This suggests that the model may be less accurate at predicting higher observed values."
  }
]