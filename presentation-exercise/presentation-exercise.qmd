---
title: "Presentation Exercise"
author: "Emma Hardin-Parker" 
date: "12 February 2024" 
---

I chose a [FiveThirtyEight](https://projects.fivethirtyeight.com/trump-approval-ratings/) article that visualized the approval and disapproval ratings of Donald Trump, over time. I used ChatGPT to help me formulate some of the code. Given that I am fairly comfortable with the ggplot2 package in R, I decided to use the plotly package for this assignment. I was unsuccessful in providing ChatGPT the actual dataset, so I was unable to reproduce the graph in its entirety; however, I seemed to get pretty close. I have also attached the snapshot of the original graph to this document. 

Here is the figure I am going to recreate 
![Original Figure](538-trump.png)

Loading required packages
```{r}
library(tidyverse)
library(ggplot2)
library(gt)
library(plotly)
library(dplyr)
```

Loading the data set from FiveThirtyEight 

```{r}
data_location <- here::here("presentation-exercise", "approval_polllist.csv")

# Reading the CSV file into a data frame
trump_approval <- readr::read_csv(data_location)

View(trump_approval)
```

Now that I have loaded the data along with all required libraries, I am going to attempt to recreate the plot. 

```{r}
#Transforming the End Date variable to a Date format

trump_approval$enddate <- as.Date(trump_approval$enddate, format = "%m/%d/%Y")

# Create a new column for the year to ensure correct ordering of the x axis 
trump_approval$year <- as.factor(format(trump_approval$enddate, "%Y"))


#Recreating the plot

trump1 <- plot_ly(trump_approval, x = ~enddate) %>%
  add_lines(y = ~adjusted_approve, name = "Approve", color = I("#006400"), hoverinfo = "y+name+text",
            text = ~paste("Date: ", enddate, "<br>", "Approve: ", adjusted_approve, "%")) %>%
  add_lines(y = ~adjusted_disapprove, name = "Disapprove",color = I("orange"), hoverinfo = "y+name+text",
            text = ~paste("Date: ", enddate, "<br>", "Disapprove: ", adjusted_disapprove, "%")) %>%
  layout(title = "How unpopular is Donald Trump?",
         xaxis = list(title = "Date", categoryorder = "trace"),
         yaxis = list(title = "Percentage"),
         hovermode = "closest")
trump1
```


Though I was unable to reproduce the graph fully, I was pleased with the results. This was my first time using plotly() or creating any interactive graphs in R, so I am okay with the turnout. 


I am now going to create a publication table using the gt() package

```{r}
#Loading required packages
library(flextable)

#Subsetting the data to only include the variables needed for the table
subset_trump <- trump_approval %>%
  select(c("pollster", "grade", "weight", "approve", "disapprove", "adjusted_approve", "adjusted_disapprove")) 
head(subset_trump) ##checking to make sure the data was subset correctly 

aggregate_data <- subset_trump %>%
  group_by(pollster) %>%
  summarise(
    grade = first(grade),
    weight = first(weight),
    approve = first(approve),
    disapprove = first(disapprove),
    adjusted_approve = first(adjusted_approve),
    adjusted_disapprove = first(adjusted_disapprove)
  )

#Creating the table using the flextable package

trump_table2 <- flextable(aggregate_data)
trump_table2 <- add_header_row(trump_table2, values = c("Pollster", "Grade", "Weight", "Approval", "Disapprove", "Adjusted Approval", "Adjusted Disapprove"))
trump_table2
```


